From: Justin Lebar <justin.lebar@gmail.com>
Date: Fri, 27 May 2011 16:50:37 -0400
Subject: Bug 660335 - Force nsID to align to 64-bit boundary. r=bsmedberg

---
 xpcom/base/nscore.h |   28 ++++++++++++++++++++++++++++
 xpcom/glue/nsID.h   |    5 +++--
 2 files changed, 31 insertions(+), 2 deletions(-)

diff --git a/xpcom/base/nscore.h b/xpcom/base/nscore.h
index 938b2aa..0f47cf1 100644
--- a/xpcom/base/nscore.h
+++ b/xpcom/base/nscore.h
@@ -163,6 +163,34 @@
 #define NS_CONSTRUCTOR_FASTCALL
 #endif
 
+/**
+ * NS_DEFINE_ALIGNED lets you define a variable aligned to a given number of
+ * bytes.
+ *
+ * For instance,
+ *
+ *   NS_DEFINE_ALIGNED(PRUint32, foo, 16);
+ *
+ * defines a variable |foo| of type PRUint32 which lives on a 16-byte (128-bit)
+ * boundary.
+ *
+ * This currently only works on GCC and MSVC.  On other compilers, we simply
+ * don't align.
+ */
+#if defined(__GNUC__)
+#define NS_DEFINE_ALIGNED(type, name, alignment) \
+type name __attribute__((aligned (alignment)))
+
+#elif defined(_MSC_VER) && (_MSC_VER >= 1300)
+#define NS_DEFINE_ALIGNED(type, name, alignment) \
+__declspec(align(alignment)) type name
+
+#else
+#define NS_DEFINE_ALIGNED(type, name, alignment) \
+type name
+
+#endif
+
 /*
  * NS_DEFCALL undoes the effect of a global regparm/stdcall setting
  * so that xptcall works correctly.
diff --git a/xpcom/glue/nsID.h b/xpcom/glue/nsID.h
index 26da5d6..59ad03b 100644
--- a/xpcom/glue/nsID.h
+++ b/xpcom/glue/nsID.h
@@ -52,11 +52,12 @@
 
 struct nsID {
   /**
-   * @name Identifier values
+   * @name Identifier values.  Align these to start at an 8-byte (64-bit)
+   * boundary so we can use 64-bit loads in nsID::Equals.
    */
 
   //@{
-  PRUint32 m0;
+  NS_DEFINE_ALIGNED(PRUint32, m0, 8);
   PRUint16 m1;
   PRUint16 m2;
   PRUint8 m3[8];
