From: Mike Hommey <mh+mozilla@glandium.org>
Date: Fri, 6 May 2011 11:26:30 +0200
Subject: Bug 620931 part 7 - Make startup cache generation work better with
 new omni.jar handling. r=mwu

---
 browser/installer/Makefile.in         |    2 +-
 browser/installer/precompile_cache.js |   38 +++-----------------------------
 2 files changed, 5 insertions(+), 35 deletions(-)

diff --git a/browser/installer/Makefile.in b/browser/installer/Makefile.in
index acea037..2b68124 100644
--- a/browser/installer/Makefile.in
+++ b/browser/installer/Makefile.in
@@ -123,7 +123,7 @@ _ABS_RUN_TEST_PROGRAM = $(call core_abspath,$(RUN_TEST_PROGRAM))
 endif
 
 GENERATE_CACHE = \
-  $(_ABS_RUN_TEST_PROGRAM) $(_ABS_DIST)/bin/xpcshell$(BIN_SUFFIX) -g "$$PWD" -f $(topsrcdir)/browser/installer/precompile_cache.js -e 'populate_startupcache("omni.jar", "startupCache.zip");' && \
+  $(_ABS_RUN_TEST_PROGRAM) $(_ABS_DIST)/bin/xpcshell$(BIN_SUFFIX) -g "$$PWD" -a "$$PWD" -f $(topsrcdir)/browser/installer/precompile_cache.js -e 'populate_startupcache("omni.jar", "startupCache.zip");' && \
   rm -rf jsloader && \
   $(UNZIP) startupCache.zip && \
   rm startupCache.zip && \
diff --git a/browser/installer/precompile_cache.js b/browser/installer/precompile_cache.js
index ff35932..8a376a9 100644
--- a/browser/installer/precompile_cache.js
+++ b/browser/installer/precompile_cache.js
@@ -65,23 +65,10 @@ function load(url) {
 function load_entries(entries, prefix) {
   while (entries.hasMore()) {
     var c = entries.getNext();
-    // Required to ensure sync js is only loaded in load_custom_entries.
-    // That function loads the sync js with the right URIs.
-    if (c.indexOf("services-sync") >= 0)
-      continue;
-    if (c.indexOf("services-crypto") >= 0)
-      continue;
     load(prefix + c);
   }
 }
 
-function load_custom_entries(entries, subst) {
-  while (entries.hasMore()) {
-    var c = entries.getNext();
-    load("resource://" + subst + "/" + c.replace("modules/" + subst + "/", ""));
-  }
-}
-
 function getGreDir() {
   return Cc["@mozilla.org/file/directory_service;1"].
     getService(Ci.nsIProperties).get("GreD", Ci.nsIFile);
@@ -103,27 +90,10 @@ function populate_startupcache(omnijarName, startupcacheName) {
   scFile.append(startupcacheName);
   setenv("MOZ_STARTUP_CACHE", scFile.path);
 
-  // the sync part below doesn't work as smoothly
-  let ioService = Cc["@mozilla.org/network/io-service;1"].
-    getService(Ci.nsIIOService);
-  let uri = ioService.newURI("resource:///modules/services-sync/",
-                             null, null);
-  let resProt = ioService.getProtocolHandler("resource")
-    .QueryInterface(Ci.nsIResProtocolHandler);
-  resProt.setSubstitution("services-sync", uri);
-
-  uri = ioService.newURI("resource:///modules/services-crypto/",
-                         null, null);
-  resProt.setSubstitution("services-crypto", uri);
-
-  load_entries(zipreader.findEntries("components/*js"), "resource://gre/");
-
-  load_custom_entries(zipreader.findEntries("modules/services-sync/*js"),
-                      "services-sync");
-  load_custom_entries(zipreader.findEntries("modules/services-crypto/*js"),
-                      "services-crypto");
+  let prefix = "resource:///";
 
-  load_entries(zipreader.findEntries("modules/*js"), "resource://gre/");
-  load_entries(zipreader.findEntries("modules/*jsm"), "resource://gre/");
+  load_entries(zipreader.findEntries("components/*js"), prefix);
+  load_entries(zipreader.findEntries("modules/*js"), prefix);
+  load_entries(zipreader.findEntries("modules/*jsm"), prefix);
   zipreader.close();
 }
