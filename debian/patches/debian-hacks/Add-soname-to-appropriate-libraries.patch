From: Mike Hommey <glandium@debian.org>
Date: Thu, 13 Mar 2008 08:22:05 +0100
Subject: Add soname to appropriate libraries.

This is a stripped down version, compared to the dpatch version, because we
actually are never going to use minor and micro version numbers. Also, we
now don't set a SO version on libxul and libxpcom because they will now
be dlloaded() by the standalone xpcomglue.
---
 config/makefiles/target_libs.mk        |  9 ++++++++-
 config/rules.mk                        | 16 +++++++++++++++-
 js/src/Makefile.in                     |  4 ++++
 js/src/config/makefiles/target_libs.mk |  9 ++++++++-
 js/src/config/rules.mk                 | 16 +++++++++++++++-
 5 files changed, 50 insertions(+), 4 deletions(-)

diff --git a/config/makefiles/target_libs.mk b/config/makefiles/target_libs.mk
index a295e74..680212d 100644
--- a/config/makefiles/target_libs.mk
+++ b/config/makefiles/target_libs.mk
@@ -43,7 +43,7 @@ GARBAGE += $(foreach lib,$(LIBRARY),$(EXPORT_LIBRARY)/$(lib))
 endif
 endif # EXPORT_LIBRARY
 
-libs:: $(SUBMAKEFILES) $(MAKE_DIRS) $(HOST_LIBRARY) $(LIBRARY) $(SHARED_LIBRARY) $(IMPORT_LIBRARY) $(HOST_PROGRAM) $(HOST_SIMPLE_PROGRAMS) $(SIMPLE_PROGRAMS) $(JAVA_LIBRARY)
+libs:: $(SUBMAKEFILES) $(MAKE_DIRS) $(HOST_LIBRARY) $(LIBRARY) $(UNVERSIONED_LIBRARY) $(SHARED_LIBRARY) $(IMPORT_LIBRARY) $(HOST_PROGRAM) $(HOST_SIMPLE_PROGRAMS) $(SIMPLE_PROGRAMS) $(JAVA_LIBRARY)
 ifndef NO_DIST_INSTALL
 ifdef SHARED_LIBRARY
 ifdef IS_COMPONENT
@@ -103,6 +103,13 @@ ifdef IMPORT_LIB_FILES
 INSTALL_TARGETS += IMPORT_LIB
 endif
 
+ifdef UNVERSIONED_LIBRARY
+$(DIST)/lib/$(UNVERSIONED_LIBRARY) $(FINAL_TARGET)/$(UNVERSIONED_LIBRARY): %/$(UNVERSIONED_LIBRARY): %/$(SHARED_LIBRARY)
+	$(call MKSHLINKS,$*)
+
+libs:: $(DIST)/lib/$(UNVERSIONED_LIBRARY) $(FINAL_TARGET)/$(UNVERSIONED_LIBRARY)
+endif
+
 endif # ! IS_COMPONENT
 endif # SHARED_LIBRARY
 
diff --git a/config/rules.mk b/config/rules.mk
index f64edab..3a0b923 100644
--- a/config/rules.mk
+++ b/config/rules.mk
@@ -251,6 +251,18 @@ else
 SHARED_LIBRARY		:= $(DLL_PREFIX)$(SHARED_LIBRARY_NAME)$(DLL_SUFFIX)
 endif
 
+ifdef SO_VERSION
+UNVERSIONED_LIBRARY	:= $(notdir $(SHARED_LIBRARY))
+
+ifeq ($(strip $(SHARED_LIBRARY)),$(strip $(SDK_LIBRARY)))
+SDK_LIBRARY		:= $(SHARED_LIBRARY)
+endif
+
+SHARED_LIBRARY		:= $(SHARED_LIBRARY).$(SO_VERSION)
+
+MKSHLINKS		= rm -f $(1)/$(UNVERSIONED_LIBRARY); ln -s $(SHARED_LIBRARY) $(1)/$(UNVERSIONED_LIBRARY)
+endif
+
 ifeq ($(OS_ARCH),OS2)
 DEF_FILE		:= $(SHARED_LIBRARY:.dll=.def)
 endif
@@ -348,7 +360,7 @@ SIMPLE_PROGRAMS :=
 endif
 
 ifndef TARGETS
-TARGETS			= $(LIBRARY) $(SHARED_LIBRARY) $(PROGRAM) $(SIMPLE_PROGRAMS) $(HOST_LIBRARY) $(HOST_PROGRAM) $(HOST_SIMPLE_PROGRAMS) $(JAVA_LIBRARY)
+TARGETS			= $(LIBRARY) $(UNVERSIONED_LIBRARY) $(SHARED_LIBRARY) $(PROGRAM) $(SIMPLE_PROGRAMS) $(HOST_LIBRARY) $(HOST_PROGRAM) $(HOST_SIMPLE_PROGRAMS) $(JAVA_LIBRARY)
 endif
 
 COBJS = $(CSRCS:.c=.$(OBJ_SUFFIX))
@@ -1018,6 +1030,8 @@ endif
 # so instead of deleting .o files after repacking them into a dylib, we make
 # symlinks back to the originals. The symlinks are a no-op for stabs debugging,
 # so no need to conditionalize on OS version or debugging format.
+$(UNVERSIONED_LIBRARY): $(SHARED_LIBRARY)
+	$(call MKSHLINKS,.)
 
 $(SHARED_LIBRARY): $(OBJS) $(LOBJS) $(DEF_FILE) $(RESFILE) $(LIBRARY) $(EXTRA_DEPS) $(GLOBAL_DEPS)
 	$(info $(notdir $@))
diff --git a/js/src/Makefile.in b/js/src/Makefile.in
index 34bc4c7..3964f55 100644
--- a/js/src/Makefile.in
+++ b/js/src/Makefile.in
@@ -21,6 +21,7 @@ endif
 
 STATIC_LIBRARY_NAME = js_static
 MSVC_ENABLE_PGO := 1
+SO_VERSION	= $(JS_SO_VERSION)
 LIBS		= $(NSPR_LIBS)
 
 # JavaScript must be built shared, even for static builds, as it is used by
@@ -586,6 +587,9 @@ ifneq (,$(REAL_LIBRARY))
 endif
 ifneq (,$(SHARED_LIBRARY))
 	$(SYSINSTALL) $(SHARED_LIBRARY) $(DESTDIR)$(libdir)
+ifneq (,$(UNVERSIONED_LIBRARY))
+	ln -s $(SHARED_LIBRARY) $(DESTDIR)$(libdir)/$(UNVERSIONED_LIBRARY)
+endif
 endif
 ifneq (,$(IMPORT_LIBRARY))
 	$(SYSINSTALL) $(IMPORT_LIBRARY) $(DESTDIR)$(libdir)
diff --git a/js/src/config/makefiles/target_libs.mk b/js/src/config/makefiles/target_libs.mk
index a295e74..680212d 100644
--- a/js/src/config/makefiles/target_libs.mk
+++ b/js/src/config/makefiles/target_libs.mk
@@ -43,7 +43,7 @@ GARBAGE += $(foreach lib,$(LIBRARY),$(EXPORT_LIBRARY)/$(lib))
 endif
 endif # EXPORT_LIBRARY
 
-libs:: $(SUBMAKEFILES) $(MAKE_DIRS) $(HOST_LIBRARY) $(LIBRARY) $(SHARED_LIBRARY) $(IMPORT_LIBRARY) $(HOST_PROGRAM) $(HOST_SIMPLE_PROGRAMS) $(SIMPLE_PROGRAMS) $(JAVA_LIBRARY)
+libs:: $(SUBMAKEFILES) $(MAKE_DIRS) $(HOST_LIBRARY) $(LIBRARY) $(UNVERSIONED_LIBRARY) $(SHARED_LIBRARY) $(IMPORT_LIBRARY) $(HOST_PROGRAM) $(HOST_SIMPLE_PROGRAMS) $(SIMPLE_PROGRAMS) $(JAVA_LIBRARY)
 ifndef NO_DIST_INSTALL
 ifdef SHARED_LIBRARY
 ifdef IS_COMPONENT
@@ -103,6 +103,13 @@ ifdef IMPORT_LIB_FILES
 INSTALL_TARGETS += IMPORT_LIB
 endif
 
+ifdef UNVERSIONED_LIBRARY
+$(DIST)/lib/$(UNVERSIONED_LIBRARY) $(FINAL_TARGET)/$(UNVERSIONED_LIBRARY): %/$(UNVERSIONED_LIBRARY): %/$(SHARED_LIBRARY)
+	$(call MKSHLINKS,$*)
+
+libs:: $(DIST)/lib/$(UNVERSIONED_LIBRARY) $(FINAL_TARGET)/$(UNVERSIONED_LIBRARY)
+endif
+
 endif # ! IS_COMPONENT
 endif # SHARED_LIBRARY
 
diff --git a/js/src/config/rules.mk b/js/src/config/rules.mk
index f64edab..3a0b923 100644
--- a/js/src/config/rules.mk
+++ b/js/src/config/rules.mk
@@ -251,6 +251,18 @@ else
 SHARED_LIBRARY		:= $(DLL_PREFIX)$(SHARED_LIBRARY_NAME)$(DLL_SUFFIX)
 endif
 
+ifdef SO_VERSION
+UNVERSIONED_LIBRARY	:= $(notdir $(SHARED_LIBRARY))
+
+ifeq ($(strip $(SHARED_LIBRARY)),$(strip $(SDK_LIBRARY)))
+SDK_LIBRARY		:= $(SHARED_LIBRARY)
+endif
+
+SHARED_LIBRARY		:= $(SHARED_LIBRARY).$(SO_VERSION)
+
+MKSHLINKS		= rm -f $(1)/$(UNVERSIONED_LIBRARY); ln -s $(SHARED_LIBRARY) $(1)/$(UNVERSIONED_LIBRARY)
+endif
+
 ifeq ($(OS_ARCH),OS2)
 DEF_FILE		:= $(SHARED_LIBRARY:.dll=.def)
 endif
@@ -348,7 +360,7 @@ SIMPLE_PROGRAMS :=
 endif
 
 ifndef TARGETS
-TARGETS			= $(LIBRARY) $(SHARED_LIBRARY) $(PROGRAM) $(SIMPLE_PROGRAMS) $(HOST_LIBRARY) $(HOST_PROGRAM) $(HOST_SIMPLE_PROGRAMS) $(JAVA_LIBRARY)
+TARGETS			= $(LIBRARY) $(UNVERSIONED_LIBRARY) $(SHARED_LIBRARY) $(PROGRAM) $(SIMPLE_PROGRAMS) $(HOST_LIBRARY) $(HOST_PROGRAM) $(HOST_SIMPLE_PROGRAMS) $(JAVA_LIBRARY)
 endif
 
 COBJS = $(CSRCS:.c=.$(OBJ_SUFFIX))
@@ -1018,6 +1030,8 @@ endif
 # so instead of deleting .o files after repacking them into a dylib, we make
 # symlinks back to the originals. The symlinks are a no-op for stabs debugging,
 # so no need to conditionalize on OS version or debugging format.
+$(UNVERSIONED_LIBRARY): $(SHARED_LIBRARY)
+	$(call MKSHLINKS,.)
 
 $(SHARED_LIBRARY): $(OBJS) $(LOBJS) $(DEF_FILE) $(RESFILE) $(LIBRARY) $(EXTRA_DEPS) $(GLOBAL_DEPS)
 	$(info $(notdir $@))
