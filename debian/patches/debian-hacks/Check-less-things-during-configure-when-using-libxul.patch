From: Mike Hommey <mh@glandium.org>
Date: Sat, 19 Apr 2008 23:01:20 +0200
Subject: Check less things during configure when using libxul-sdk

We don't need to check e.g. cairo or pango when using libxul-sdk, since
we won't be building most of the toolkit.
---
 configure.in |   32 ++++++++++++++++++++++++++------
 1 files changed, 26 insertions(+), 6 deletions(-)

diff --git a/configure.in b/configure.in
index 4c4559b..5d2c46b 100644
--- a/configure.in
+++ b/configure.in
@@ -4608,6 +4608,7 @@ AC_SUBST(LIBXUL_SDK)
 
 if test -n "$LIBXUL_SDK"; then
     LIBXUL_DIST="$LIBXUL_SDK"
+    SKIP_LIBRARY_CHECKS=1
 else
     LIBXUL_DIST="$MOZ_BUILD_ROOT/dist"
 fi
@@ -4646,6 +4647,10 @@ if test -n "$MOZ_NATIVE_NSPR"; then
                 AC_MSG_ERROR([system NSPR does not support PR_STATIC_ASSERT or including prtypes.h does not provide it]))
     CFLAGS=$_SAVE_CFLAGS
 else
+  if test -n "$LIBXUL_SDK"; then
+      NSPR_CFLAGS="-I$LIBXUL_SDK_DIR/sdk/include"
+      NSPR_LIBS="-L$LIBXUL_SDK_DIR/sdk/lib -lnspr$NSPR_VERSION -lplc$NSPR_VERSION -lplds$NSPR_VERSION"
+  else
     if test "$OS_ARCH" = "WINCE"; then
         NSPR_CFLAGS="-I${LIBXUL_DIST}/include/nspr"
         NSPR_LIBS="${LIBXUL_DIST}/lib/nspr${NSPR_VERSION}.lib ${LIBXUL_DIST}/lib/plc${NSPR_VERSION}.lib ${LIBXUL_DIST}/lib/plds${NSPR_VERSION}.lib "
@@ -4660,6 +4665,7 @@ else
         NSPR_CFLAGS='`$(LIBXUL_DIST)/sdk/bin/nspr-config --prefix='${LIBXUL_DIST}' --includedir='${LIBXUL_DIST}'/include/nspr --cflags`'
         NSPR_LIBS='`$(LIBXUL_DIST)/sdk/bin/nspr-config --prefix='${LIBXUL_DIST}' --libdir='${LIBXUL_DIST}'/lib --libs`'
     fi
+  fi
 fi
 
 dnl system libevent Support
@@ -5348,6 +5354,7 @@ dnl ========================================================
 dnl = startup-notification support module
 dnl ========================================================
 
+if test -z "$LIBXUL_SDK"; then
 if test "$MOZ_ENABLE_GTK2"
 then
     MOZ_ENABLE_STARTUP_NOTIFICATION=
@@ -5376,6 +5383,7 @@ then
 
     TK_LIBS="$TK_LIBS $MOZ_STARTUP_NOTIFICATION_LIBS"
 fi
+fi
 AC_SUBST(MOZ_ENABLE_STARTUP_NOTIFICATION)
 AC_SUBST(MOZ_STARTUP_NOTIFICATION_CFLAGS)
 AC_SUBST(MOZ_STARTUP_NOTIFICATION_LIBS)
@@ -5439,6 +5447,12 @@ AC_SUBST(MOZ_QT_LIBS)
 AC_SUBST(MOC)
 
 AC_SUBST(MOZ_DFB)
+
+if test "$MOZ_ENABLE_GTK2" && test -z "$LIBXUL_SDK"
+then
+    AC_DEFINE(MOZ_X11)
+    MOZ_X11=1
+fi
 AC_SUBST(MOZ_X11)
 
 dnl ========================================================
@@ -5524,7 +5538,7 @@ MOZ_ARG_DISABLE_BOOL(pango,
 dnl ========================================================
 dnl = Pango
 dnl ========================================================
-if test "$MOZ_ENABLE_GTK2"
+if test "$MOZ_ENABLE_GTK2" && test -z "$LIBXUL_SDK"
 then
     AC_SUBST(MOZ_PANGO)
 
@@ -5565,6 +5579,7 @@ dnl ========================================================
 dnl = GnomeVFS, GIO and GConf support module
 dnl ========================================================
 
+if test -z "$LIBXUL_SDK"; then
 if test "$MOZ_X11"
 then
     dnl build the gnomevfs extension by default only when the
@@ -5796,6 +5811,9 @@ AC_SUBST(MOZ_DBUS_LIBS)
 AC_SUBST(MOZ_DBUS_GLIB_CFLAGS)
 AC_SUBST(MOZ_DBUS_GLIB_LIBS)
 
+fi # LIBXUL_SDK
+
+
 dnl ========================================================
 dnl = Build Personal Security Manager
 dnl ========================================================
@@ -6203,6 +6221,7 @@ dnl = Check alsa availability on Linux if using sydneyaudio
 dnl ========================================================
 
 dnl If using sydneyaudio with Linux, ensure that the alsa library is available
+if test -z "$LIBXUL_SDK"; then
 if test -n "$MOZ_SYDNEYAUDIO"; then
    case "$target_os" in
 linux*)
@@ -6212,6 +6231,7 @@ linux*)
       ;;
    esac
 fi
+fi
 
 dnl ========================================================
 dnl Splashscreen
@@ -7490,7 +7510,7 @@ MOZ_ARG_ENABLE_BOOL(jemalloc,
     MOZ_MEMORY=1,
     MOZ_MEMORY=)
 
-if test "$NS_TRACE_MALLOC"; then
+if test "$NS_TRACE_MALLOC" || test "$LIBXUL_SDK"; then
     MOZ_MEMORY=
 fi
 
@@ -8426,7 +8446,7 @@ dnl Check for GLib and libIDL.
 dnl ========================================================
 SKIP_IDL_CHECK="no"
 
-if test -z "$COMPILE_ENVIRONMENT"; then
+if test -z "$COMPILE_ENVIRONMENT" || test "$LIBXUL_SDK"; then
     SKIP_IDL_CHECK="yes"
 fi
 
@@ -8626,7 +8646,7 @@ else
     LIBIDL_LIBS="$HOST_LIBIDL_LIBS"
 fi
 
-if test -z "$SKIP_PATH_CHECKS"; then
+if test -z "$SKIP_PATH_CHECKS" && test -z "$LIBXUL_SDK"; then
 if test -z "${GLIB_CFLAGS}" -o -z "${GLIB_LIBS}" ; then
     if test "$MOZ_ENABLE_GTK2" -o "$USE_ELF_DYNSTR_GC" ; then
         PKG_CHECK_MODULES(GLIB, glib-2.0 >= 1.3.7 gobject-2.0)
@@ -9356,7 +9376,7 @@ else
 fi
 
 dnl Check for missing components
-if test "$COMPILE_ENVIRONMENT"; then
+if test "$COMPILE_ENVIRONMENT" && test -z "$LIBXUL_SDK"; then
 if test "$MOZ_X11"; then
     dnl ====================================================
     dnl = Check if X headers exist
@@ -9394,7 +9414,7 @@ if test -n "$MOZ_WEBGL_GLX"; then
 fi # MOZ_WEBGL_GLX
 fi # COMPILE_ENVIRONMENT
 
-if test "$USE_FC_FREETYPE"; then
+if test "$USE_FC_FREETYPE" && test -z "$LIBXUL_SDK"; then
     if test "$COMPILE_ENVIRONMENT"; then
     	_SAVE_CPPFLAGS="$CPPFLAGS"
     	CPPFLAGS="$CPPFLAGS $FT2_CFLAGS $XCFLAGS"
