#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_BUILD_ARCH  ?= $(shell dpkg-architecture -qDEB_BUILD_ARCH)

DEBIAN_VERSION := $(shell dpkg-parsechangelog | sed -n 's/^Version: *\(.*\)$$/\1/ p')
UPSTREAM_VERSION := $(shell dpkg-parsechangelog | sed -n 's/^Version: *\(.*\)-.*$$/\1/ p')

PYVER := $(shell pyversions -d)

CFLAGS := -g

AUTOCONF_DIRS := build/autoconf

JAVA_VARS := MOZ_JAVAXPCOM=1 JAVA_INCLUDE_PATH=$(CURDIR)/sun-java/stubs/include JAVAC=javac JAR=jar

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CONFIGURE_FLAGS += --disable-optim
endif

ifeq ($(DEB_BUILD_ARCH),alpha)
	CFLAGS += -Wl,--no-relax
endif

ifeq ($(DEB_BUILD_ARCH),ppc64)
	CFLAGS += -mminimal-toc
endif

ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
	CONFIGURE_FLAGS += --enable-debug
endif

COMPONENT_PACKAGES := python-xpcom xulrunner-1.9-gnome-support
COMPONENT_SCRIPTS := $(COMPONENT_PACKAGES:%=debian/%.postinst) $(COMPONENT_PACKAGES:%=debian/%.postrm)
$(COMPONENT_SCRIPTS): %: debian/postinstrm.in
	cp $^ $@

config.status: ./configure debian/mozconfig
	dh_testdir

	for dir in $(AUTOCONF_DIRS); do \
		for file in config.guess config.sub; do \
			sed -i '2!b;/^#/ i\exec "/usr/share/misc/'$$file'" "$$@"' $$dir/$$file; \
		done; \
	done

	# Add here commands to configure the package.
	JAVA_HOME=/usr/lib/jvm/java-gcj \
	MOZCONFIG=debian/mozconfig \
	CFLAGS="$(CFLAGS)" \
	CXXFLAGS="$(CFLAGS)" \
	./configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) \
	            $(CONFIGURE_FLAGS)

build: build-stamp

build-stamp:  config.status
	dh_testdir

	# Add here commands to compile the package.
	LD_LIBRARY_PATH=$(CURDIR)/dist/lib $(MAKE) PYTHON_SO=$(shell objdump -x /usr/lib/lib$(PYVER).so | awk '/SONAME/ {print $$2}') $(JAVA_VARS) DEB_NO_JAR=1 MOZ_APP_VERSION=1.9 OS_LDFLAGS="-Wl,--as-needed $(shell sed -n 's/^OS_LDFLAGS\s*=\s*//p' config/autoconf.mk)"
	#docbook-to-man debian/xulrunner.sgml > xulrunner.1

	touch build-stamp

build-jars: build-jars-stamp

build-jars-stamp: build-stamp
	$(MAKE) -C extensions/java/xpcom/interfaces $(JAVA_VARS)
	$(MAKE) -C extensions/java/xpcom/src jar-libs $(JAVA_VARS)
	
	touch build-jars-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build*-stamp install*-stamp mozilla MPL debian/*.shlibs.local
	rm -rf debian/include
	rm -f $(COMPONENT_SCRIPTS)

	# Add here commands to clean up after the build process.
	[ ! -f Makefile ] || $(MAKE) distclean $(JAVA_VARS) MOZ_APP_VERSION=1.9

	for dir in $(AUTOCONF_DIRS); do \
		for file in config.guess config.sub; do \
			sed -i '2!b;/^exec "/ d' $$dir/$$file; \
		done; \
	done

	dh_clean 

install: install-stamp

install-stamp: build-stamp
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	# Add here commands to install the package into debian/tmp.
	$(MAKE) install DESTDIR=$(CURDIR)/debian/tmp MOZ_APP_VERSION=1.9

	mv debian/tmp/usr/bin/xulrunner debian/tmp/usr/bin/xulrunner-1.9
	install -m 755 dist/bin/regxpcom debian/tmp/usr/lib/xulrunner-1.9

	# Fixup permissions
	find debian/tmp -type f -print0 | xargs -0 chmod 644
	for f in js run-mozilla.sh xulrunner mozilla-xremote-client regxpcom updater xpcshell xpidl xpt_dump xpt_link xulrunner-bin xulrunner-stub; do chmod 755 debian/tmp/usr/lib/xulrunner-1.9/$$f; done

	# Replace some installed files by symlinks
	cd debian/tmp/usr/lib/xulrunner-devel-1.9/sdk/lib; for f in *.so; do rm -f $$f; ln -s /usr/lib/xulrunner-1.9/$$f $$f; done
	cd debian/tmp/usr/include/xulrunner-1.9/stable; for f in *; do rm -f ../unstable/$$f; ln -s ../stable/$$f ../unstable/$$f; done
	cd debian/tmp/usr/share/idl/xulrunner-1.9/stable; for f in *; do rm -f ../unstable/$$f; ln -s ../stable/$$f ../unstable/$$f; done

	find dist/bin -printf %P\\n | sort -u > debian/dist.list
	find debian/tmp/usr/lib/xulrunner-1.9 -printf %P\\n | sort -u > debian/tmp.list
	diff debian/tmp.list debian/dist.list | grep "^[<>]" | grep -v "^> DEBIAN" | sort
	rm -f debian/tmp.list debian/dist.list

	cp -Lr dist/include/js debian/tmp/usr/include/mozjs
	find debian/tmp/usr/include/mozjs -type f -printf %P\\n | while read f; do \
		file=$$(echo debian/tmp/usr/include/xulrunner-1.9/*/$$f); \
		rm $$file; \
		ln -s /usr/include/mozjs/$$(basename $$f) $$file; \
	done
	for f in /usr/include/nspr/*; do \
		ln -s $$f debian/tmp/usr/include/xulrunner-1.9/stable/$$(basename $$f); \
		ln -s $$f debian/tmp/usr/include/xulrunner-1.9/unstable/$$(basename $$f); \
	done
	# Move out libraries in /usr
	mv debian/tmp/usr/lib/xulrunner-1.9/libmozjs.so* debian/tmp/usr/lib
	mv debian/tmp/usr/lib/xulrunner-1.9/js debian/tmp/usr/bin/smjs

	install -d -m 755 debian/tmp/usr/lib/$(PYVER)
	mv debian/tmp/usr/lib/xulrunner-1.9/python debian/tmp/usr/lib/$(PYVER)/site-packages

	install -d -m 755 debian/tmp/usr/lib/xulrunner-1.9/chrome/toolkit/content/global/
	install -m 644 toolkit/content/buildconfig.html debian/tmp/usr/lib/xulrunner-1.9/chrome/toolkit/content/global/
	echo override chrome://global/content/buildconfig.html toolkit/content/global/buildconfig.html >> debian/tmp/usr/lib/xulrunner-1.9/chrome/toolkit.manifest

	cp -f LICENSE MPL
	touch install-stamp

# Build architecture-independent files here.
binary-indep: build-jars install
	dh_testdir
	dh_testroot
	dh_installchangelogs -i
	dh_installdocs -A -i MPL
	dh_installexamples -i
	dh_install -i --sourcedir=debian/tmp -Xmozilla-config.h
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install $(COMPONENT_SCRIPTS)
	dh_testdir
	dh_testroot
	dh_installchangelogs -a
	dh_installdocs -A -a -XREADME.txt MPL
	dh_installexamples -a
	dh_installmenu -pspidermonkey-bin
	dh_install -a --sourcedir=debian/tmp
	dh_pysupport -ppython-xpcom
	dh_installman -pspidermonkey-bin debian/smjs.1
	dh_link -a
	dh_strip -a -Nlibmozjs1d -Nspidermonkey-bin --dbg-package=xulrunner-1.9-dbg
	dh_strip -plibmozjs1d -pspidermonkey-bin --dbg-package=libmozjs1d-dbg
	dh_compress -a
	dh_fixperms -a
	dh_makeshlibs -plibmozjs1d
	dh_installdeb -a
	dh_shlibdeps -a -l$(CURDIR)/debian/tmp/usr/lib/xulrunner-1.9
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
	find debian/tmp -printf %P\\n | sort -u > debian/tmp.list
	find `grep Package: debian/control | awk '{print "debian/"$$2}'` -printf %P\\n | sed 's,usr/share/xulrunner,usr/lib/xulrunner,' | sort -u > debian/pkg.list
	diff debian/tmp.list debian/pkg.list | grep "^[<>]" | grep -v "^> DEBIAN" | sort
	rm -f debian/tmp.list debian/pkg.list

.PHONY: build clean binary-indep binary-arch binary install build-jars

.NOTPARALLEL:
